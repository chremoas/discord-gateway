// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gateway.proto

/*
Package discord_gateway is a generated protocol buffer package.

It is generated from these files:
	gateway.proto

It has these top-level messages:
	UpdateMemberRequest
	UpdateMemberResponse
	GetAllMembersRequest
	GuildObjectRequest
	GetMembersResponse
	GetRoleResponse
	CreateRoleRequest
	CreateRolesResponse
	GetUserRequest
	GetUserResponse
	Role
	Member
	User
*/
package discord_gateway

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MemberUpdateOperation int32

const (
	MemberUpdateOperation_ADD_OR_UPDATE_ROLES MemberUpdateOperation = 0
	MemberUpdateOperation_REMOVE_ROLES        MemberUpdateOperation = 1
)

var MemberUpdateOperation_name = map[int32]string{
	0: "ADD_OR_UPDATE_ROLES",
	1: "REMOVE_ROLES",
}
var MemberUpdateOperation_value = map[string]int32{
	"ADD_OR_UPDATE_ROLES": 0,
	"REMOVE_ROLES":        1,
}

func (x MemberUpdateOperation) String() string {
	return proto.EnumName(MemberUpdateOperation_name, int32(x))
}
func (MemberUpdateOperation) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type UpdateMemberRequest struct {
	GuildId   string                `protobuf:"bytes,1,opt,name=GuildId" json:"GuildId,omitempty"`
	Operation MemberUpdateOperation `protobuf:"varint,2,opt,name=Operation,enum=discord.gateway.MemberUpdateOperation" json:"Operation,omitempty"`
	UserId    string                `protobuf:"bytes,3,opt,name=UserId" json:"UserId,omitempty"`
	RoleIds   []string              `protobuf:"bytes,4,rep,name=RoleIds" json:"RoleIds,omitempty"`
}

func (m *UpdateMemberRequest) Reset()                    { *m = UpdateMemberRequest{} }
func (m *UpdateMemberRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateMemberRequest) ProtoMessage()               {}
func (*UpdateMemberRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UpdateMemberRequest) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *UpdateMemberRequest) GetOperation() MemberUpdateOperation {
	if m != nil {
		return m.Operation
	}
	return MemberUpdateOperation_ADD_OR_UPDATE_ROLES
}

func (m *UpdateMemberRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UpdateMemberRequest) GetRoleIds() []string {
	if m != nil {
		return m.RoleIds
	}
	return nil
}

type UpdateMemberResponse struct {
	Success bool   `protobuf:"varint,1,opt,name=Success" json:"Success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message" json:"Message,omitempty"`
}

func (m *UpdateMemberResponse) Reset()                    { *m = UpdateMemberResponse{} }
func (m *UpdateMemberResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateMemberResponse) ProtoMessage()               {}
func (*UpdateMemberResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UpdateMemberResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *UpdateMemberResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetAllMembersRequest struct {
	GuildId       string `protobuf:"bytes,1,opt,name=GuildId" json:"GuildId,omitempty"`
	After         string `protobuf:"bytes,2,opt,name=After" json:"After,omitempty"`
	NumberPerPage int32  `protobuf:"varint,3,opt,name=NumberPerPage" json:"NumberPerPage,omitempty"`
}

func (m *GetAllMembersRequest) Reset()                    { *m = GetAllMembersRequest{} }
func (m *GetAllMembersRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAllMembersRequest) ProtoMessage()               {}
func (*GetAllMembersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetAllMembersRequest) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *GetAllMembersRequest) GetAfter() string {
	if m != nil {
		return m.After
	}
	return ""
}

func (m *GetAllMembersRequest) GetNumberPerPage() int32 {
	if m != nil {
		return m.NumberPerPage
	}
	return 0
}

type GuildObjectRequest struct {
	GuildId string `protobuf:"bytes,1,opt,name=GuildId" json:"GuildId,omitempty"`
}

func (m *GuildObjectRequest) Reset()                    { *m = GuildObjectRequest{} }
func (m *GuildObjectRequest) String() string            { return proto.CompactTextString(m) }
func (*GuildObjectRequest) ProtoMessage()               {}
func (*GuildObjectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GuildObjectRequest) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

type GetMembersResponse struct {
	Members []*Member `protobuf:"bytes,1,rep,name=Members" json:"Members,omitempty"`
}

func (m *GetMembersResponse) Reset()                    { *m = GetMembersResponse{} }
func (m *GetMembersResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMembersResponse) ProtoMessage()               {}
func (*GetMembersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetMembersResponse) GetMembers() []*Member {
	if m != nil {
		return m.Members
	}
	return nil
}

type GetRoleResponse struct {
	Roles []*Role `protobuf:"bytes,1,rep,name=Roles" json:"Roles,omitempty"`
}

func (m *GetRoleResponse) Reset()                    { *m = GetRoleResponse{} }
func (m *GetRoleResponse) String() string            { return proto.CompactTextString(m) }
func (*GetRoleResponse) ProtoMessage()               {}
func (*GetRoleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetRoleResponse) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

type CreateRoleRequest struct {
	GuildId     string `protobuf:"bytes,1,opt,name=GuildId" json:"GuildId,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Color       int32  `protobuf:"varint,3,opt,name=Color" json:"Color,omitempty"`
	Hoist       bool   `protobuf:"varint,4,opt,name=Hoist" json:"Hoist,omitempty"`
	Permissions int32  `protobuf:"varint,5,opt,name=Permissions" json:"Permissions,omitempty"`
	Mentionable bool   `protobuf:"varint,6,opt,name=Mentionable" json:"Mentionable,omitempty"`
}

func (m *CreateRoleRequest) Reset()                    { *m = CreateRoleRequest{} }
func (m *CreateRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRoleRequest) ProtoMessage()               {}
func (*CreateRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CreateRoleRequest) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *CreateRoleRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRoleRequest) GetColor() int32 {
	if m != nil {
		return m.Color
	}
	return 0
}

func (m *CreateRoleRequest) GetHoist() bool {
	if m != nil {
		return m.Hoist
	}
	return false
}

func (m *CreateRoleRequest) GetPermissions() int32 {
	if m != nil {
		return m.Permissions
	}
	return 0
}

func (m *CreateRoleRequest) GetMentionable() bool {
	if m != nil {
		return m.Mentionable
	}
	return false
}

type CreateRolesResponse struct {
	RoleId string `protobuf:"bytes,1,opt,name=RoleId" json:"RoleId,omitempty"`
}

func (m *CreateRolesResponse) Reset()                    { *m = CreateRolesResponse{} }
func (m *CreateRolesResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateRolesResponse) ProtoMessage()               {}
func (*CreateRolesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CreateRolesResponse) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

type GetUserRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=UserId" json:"UserId,omitempty"`
}

func (m *GetUserRequest) Reset()                    { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()               {}
func (*GetUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetUserResponse struct {
	User *User `protobuf:"bytes,1,opt,name=User" json:"User,omitempty"`
}

func (m *GetUserResponse) Reset()                    { *m = GetUserResponse{} }
func (m *GetUserResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUserResponse) ProtoMessage()               {}
func (*GetUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GetUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type Role struct {
	Id          string    `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	Name        string    `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Managed     bool      `protobuf:"varint,3,opt,name=Managed" json:"Managed,omitempty"`
	Mentionable bool      `protobuf:"varint,4,opt,name=Mentionable" json:"Mentionable,omitempty"`
	Hoist       bool      `protobuf:"varint,5,opt,name=Hoist" json:"Hoist,omitempty"`
	Color       int32     `protobuf:"varint,6,opt,name=Color" json:"Color,omitempty"`
	Position    int32     `protobuf:"varint,7,opt,name=Position" json:"Position,omitempty"`
	Permissions int32     `protobuf:"varint,8,opt,name=Permissions" json:"Permissions,omitempty"`
	Members     []*Member `protobuf:"bytes,9,rep,name=Members" json:"Members,omitempty"`
}

func (m *Role) Reset()                    { *m = Role{} }
func (m *Role) String() string            { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()               {}
func (*Role) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Role) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Role) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Role) GetManaged() bool {
	if m != nil {
		return m.Managed
	}
	return false
}

func (m *Role) GetMentionable() bool {
	if m != nil {
		return m.Mentionable
	}
	return false
}

func (m *Role) GetHoist() bool {
	if m != nil {
		return m.Hoist
	}
	return false
}

func (m *Role) GetColor() int32 {
	if m != nil {
		return m.Color
	}
	return 0
}

func (m *Role) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *Role) GetPermissions() int32 {
	if m != nil {
		return m.Permissions
	}
	return 0
}

func (m *Role) GetMembers() []*Member {
	if m != nil {
		return m.Members
	}
	return nil
}

type Member struct {
	GuildId  string  `protobuf:"bytes,1,opt,name=GuildId" json:"GuildId,omitempty"`
	JoinedAt string  `protobuf:"bytes,2,opt,name=JoinedAt" json:"JoinedAt,omitempty"`
	Nick     string  `protobuf:"bytes,3,opt,name=Nick" json:"Nick,omitempty"`
	Deaf     bool    `protobuf:"varint,4,opt,name=Deaf" json:"Deaf,omitempty"`
	Mute     bool    `protobuf:"varint,5,opt,name=Mute" json:"Mute,omitempty"`
	User     *User   `protobuf:"bytes,6,opt,name=User" json:"User,omitempty"`
	Roles    []*Role `protobuf:"bytes,7,rep,name=Roles" json:"Roles,omitempty"`
}

func (m *Member) Reset()                    { *m = Member{} }
func (m *Member) String() string            { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()               {}
func (*Member) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Member) GetGuildId() string {
	if m != nil {
		return m.GuildId
	}
	return ""
}

func (m *Member) GetJoinedAt() string {
	if m != nil {
		return m.JoinedAt
	}
	return ""
}

func (m *Member) GetNick() string {
	if m != nil {
		return m.Nick
	}
	return ""
}

func (m *Member) GetDeaf() bool {
	if m != nil {
		return m.Deaf
	}
	return false
}

func (m *Member) GetMute() bool {
	if m != nil {
		return m.Mute
	}
	return false
}

func (m *Member) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Member) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

type User struct {
	Id            string `protobuf:"bytes,1,opt,name=Id" json:"Id,omitempty"`
	Email         string `protobuf:"bytes,2,opt,name=Email" json:"Email,omitempty"`
	Username      string `protobuf:"bytes,3,opt,name=Username" json:"Username,omitempty"`
	Avatar        string `protobuf:"bytes,4,opt,name=Avatar" json:"Avatar,omitempty"`
	Discriminator string `protobuf:"bytes,5,opt,name=Discriminator" json:"Discriminator,omitempty"`
	Token         string `protobuf:"bytes,6,opt,name=Token" json:"Token,omitempty"`
	Verified      bool   `protobuf:"varint,7,opt,name=Verified" json:"Verified,omitempty"`
	MFAEnabled    bool   `protobuf:"varint,8,opt,name=MFAEnabled" json:"MFAEnabled,omitempty"`
	Bot           bool   `protobuf:"varint,9,opt,name=Bot" json:"Bot,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *User) GetDiscriminator() string {
	if m != nil {
		return m.Discriminator
	}
	return ""
}

func (m *User) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *User) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

func (m *User) GetMFAEnabled() bool {
	if m != nil {
		return m.MFAEnabled
	}
	return false
}

func (m *User) GetBot() bool {
	if m != nil {
		return m.Bot
	}
	return false
}

func init() {
	proto.RegisterType((*UpdateMemberRequest)(nil), "discord.gateway.UpdateMemberRequest")
	proto.RegisterType((*UpdateMemberResponse)(nil), "discord.gateway.UpdateMemberResponse")
	proto.RegisterType((*GetAllMembersRequest)(nil), "discord.gateway.GetAllMembersRequest")
	proto.RegisterType((*GuildObjectRequest)(nil), "discord.gateway.GuildObjectRequest")
	proto.RegisterType((*GetMembersResponse)(nil), "discord.gateway.GetMembersResponse")
	proto.RegisterType((*GetRoleResponse)(nil), "discord.gateway.GetRoleResponse")
	proto.RegisterType((*CreateRoleRequest)(nil), "discord.gateway.CreateRoleRequest")
	proto.RegisterType((*CreateRolesResponse)(nil), "discord.gateway.CreateRolesResponse")
	proto.RegisterType((*GetUserRequest)(nil), "discord.gateway.GetUserRequest")
	proto.RegisterType((*GetUserResponse)(nil), "discord.gateway.GetUserResponse")
	proto.RegisterType((*Role)(nil), "discord.gateway.Role")
	proto.RegisterType((*Member)(nil), "discord.gateway.Member")
	proto.RegisterType((*User)(nil), "discord.gateway.User")
	proto.RegisterEnum("discord.gateway.MemberUpdateOperation", MemberUpdateOperation_name, MemberUpdateOperation_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for DiscordGateway service

type DiscordGatewayClient interface {
	UpdateMember(ctx context.Context, in *UpdateMemberRequest, opts ...client.CallOption) (*UpdateMemberResponse, error)
	GetAllMembers(ctx context.Context, in *GetAllMembersRequest, opts ...client.CallOption) (*GetMembersResponse, error)
	GetAllRoles(ctx context.Context, in *GuildObjectRequest, opts ...client.CallOption) (*GetRoleResponse, error)
	CreateRole(ctx context.Context, in *CreateRoleRequest, opts ...client.CallOption) (*CreateRolesResponse, error)
	GetUser(ctx context.Context, in *GetUserRequest, opts ...client.CallOption) (*GetUserResponse, error)
}

type discordGatewayClient struct {
	c           client.Client
	serviceName string
}

func NewDiscordGatewayClient(serviceName string, c client.Client) DiscordGatewayClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "discord.gateway"
	}
	return &discordGatewayClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *discordGatewayClient) UpdateMember(ctx context.Context, in *UpdateMemberRequest, opts ...client.CallOption) (*UpdateMemberResponse, error) {
	req := c.c.NewRequest(c.serviceName, "DiscordGateway.UpdateMember", in)
	out := new(UpdateMemberResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discordGatewayClient) GetAllMembers(ctx context.Context, in *GetAllMembersRequest, opts ...client.CallOption) (*GetMembersResponse, error) {
	req := c.c.NewRequest(c.serviceName, "DiscordGateway.GetAllMembers", in)
	out := new(GetMembersResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discordGatewayClient) GetAllRoles(ctx context.Context, in *GuildObjectRequest, opts ...client.CallOption) (*GetRoleResponse, error) {
	req := c.c.NewRequest(c.serviceName, "DiscordGateway.GetAllRoles", in)
	out := new(GetRoleResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discordGatewayClient) CreateRole(ctx context.Context, in *CreateRoleRequest, opts ...client.CallOption) (*CreateRolesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "DiscordGateway.CreateRole", in)
	out := new(CreateRolesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discordGatewayClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...client.CallOption) (*GetUserResponse, error) {
	req := c.c.NewRequest(c.serviceName, "DiscordGateway.GetUser", in)
	out := new(GetUserResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DiscordGateway service

type DiscordGatewayHandler interface {
	UpdateMember(context.Context, *UpdateMemberRequest, *UpdateMemberResponse) error
	GetAllMembers(context.Context, *GetAllMembersRequest, *GetMembersResponse) error
	GetAllRoles(context.Context, *GuildObjectRequest, *GetRoleResponse) error
	CreateRole(context.Context, *CreateRoleRequest, *CreateRolesResponse) error
	GetUser(context.Context, *GetUserRequest, *GetUserResponse) error
}

func RegisterDiscordGatewayHandler(s server.Server, hdlr DiscordGatewayHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&DiscordGateway{hdlr}, opts...))
}

type DiscordGateway struct {
	DiscordGatewayHandler
}

func (h *DiscordGateway) UpdateMember(ctx context.Context, in *UpdateMemberRequest, out *UpdateMemberResponse) error {
	return h.DiscordGatewayHandler.UpdateMember(ctx, in, out)
}

func (h *DiscordGateway) GetAllMembers(ctx context.Context, in *GetAllMembersRequest, out *GetMembersResponse) error {
	return h.DiscordGatewayHandler.GetAllMembers(ctx, in, out)
}

func (h *DiscordGateway) GetAllRoles(ctx context.Context, in *GuildObjectRequest, out *GetRoleResponse) error {
	return h.DiscordGatewayHandler.GetAllRoles(ctx, in, out)
}

func (h *DiscordGateway) CreateRole(ctx context.Context, in *CreateRoleRequest, out *CreateRolesResponse) error {
	return h.DiscordGatewayHandler.CreateRole(ctx, in, out)
}

func (h *DiscordGateway) GetUser(ctx context.Context, in *GetUserRequest, out *GetUserResponse) error {
	return h.DiscordGatewayHandler.GetUser(ctx, in, out)
}

func init() { proto.RegisterFile("gateway.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 822 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xdd, 0x6e, 0xf3, 0x44,
	0x10, 0x8d, 0xf3, 0xef, 0x69, 0x9b, 0x96, 0x6d, 0xda, 0x5a, 0xb9, 0x80, 0x68, 0x29, 0x28, 0x80,
	0x88, 0x44, 0xb9, 0x45, 0x48, 0x69, 0x13, 0x42, 0x2b, 0xd2, 0x44, 0xdb, 0x1f, 0x71, 0x53, 0x55,
	0x4e, 0x3c, 0xad, 0x4c, 0x1d, 0x3b, 0x78, 0x37, 0x20, 0xae, 0x79, 0x18, 0xae, 0x79, 0x13, 0xc4,
	0x63, 0x7c, 0x4f, 0xf1, 0x69, 0x77, 0x6d, 0xc7, 0x89, 0xdd, 0xa6, 0x77, 0x7b, 0xc6, 0x33, 0x67,
	0x67, 0xce, 0xcc, 0x4e, 0x02, 0x7b, 0xcf, 0xb6, 0xc0, 0x3f, 0xed, 0xbf, 0xba, 0x8b, 0x30, 0x10,
	0x01, 0xd9, 0x77, 0x5c, 0x3e, 0x0b, 0x42, 0xa7, 0x1b, 0x99, 0xe9, 0x3f, 0x06, 0x1c, 0xde, 0x2d,
	0x1c, 0x5b, 0xe0, 0x08, 0xe7, 0x53, 0x0c, 0x19, 0xfe, 0xbe, 0x44, 0x2e, 0x88, 0x05, 0xb5, 0xe1,
	0xd2, 0xf5, 0x9c, 0x4b, 0xc7, 0x32, 0xda, 0x46, 0xc7, 0x64, 0x31, 0x24, 0x7d, 0x30, 0xc7, 0x0b,
	0x0c, 0x6d, 0xe1, 0x06, 0xbe, 0x55, 0x6c, 0x1b, 0x9d, 0xc6, 0xd9, 0x97, 0xdd, 0x0d, 0xda, 0xae,
	0x26, 0xd3, 0xc4, 0x89, 0x37, 0x5b, 0x05, 0x92, 0x63, 0xa8, 0xde, 0x71, 0x0c, 0x2f, 0x1d, 0xab,
	0xa4, 0xe8, 0x23, 0x24, 0xef, 0x65, 0x81, 0x87, 0x97, 0x0e, 0xb7, 0xca, 0xed, 0x92, 0xbc, 0x37,
	0x82, 0xf4, 0x0a, 0x9a, 0xeb, 0x89, 0xf2, 0x45, 0xe0, 0x73, 0x94, 0x11, 0x37, 0xcb, 0xd9, 0x0c,
	0x39, 0x57, 0x99, 0xd6, 0x59, 0x0c, 0xe5, 0x97, 0x11, 0x72, 0x6e, 0x3f, 0xa3, 0xca, 0xd3, 0x64,
	0x31, 0xa4, 0x1e, 0x34, 0x87, 0x28, 0x7a, 0x9e, 0xa7, 0xb9, 0xf8, 0xf6, 0xaa, 0x9b, 0x50, 0xe9,
	0x3d, 0x09, 0x0c, 0x23, 0x26, 0x0d, 0xc8, 0x29, 0xec, 0x5d, 0x2f, 0x25, 0xc3, 0x04, 0xc3, 0x89,
	0xbc, 0x47, 0x16, 0x53, 0x61, 0xeb, 0x46, 0xda, 0x05, 0xa2, 0x68, 0xc6, 0xd3, 0xdf, 0x70, 0x26,
	0xb6, 0xde, 0x45, 0x87, 0x40, 0x86, 0x28, 0x92, 0xd4, 0xa2, 0x3a, 0xbf, 0x93, 0xd5, 0x28, 0x93,
	0x65, 0xb4, 0x4b, 0x9d, 0x9d, 0xb3, 0x93, 0x57, 0x54, 0x67, 0xb1, 0x1f, 0xfd, 0x11, 0xf6, 0x87,
	0x28, 0xa4, 0x80, 0x09, 0xcb, 0x37, 0x50, 0x91, 0x38, 0xe6, 0x38, 0xca, 0x70, 0x28, 0x6f, 0xed,
	0x43, 0xff, 0x35, 0xe0, 0x93, 0x8b, 0x10, 0x6d, 0x81, 0x9a, 0x63, 0x9b, 0x48, 0x04, 0xca, 0xd7,
	0xf6, 0x3c, 0x56, 0x5b, 0x9d, 0xa5, 0x70, 0x17, 0x81, 0x17, 0x84, 0x91, 0x34, 0x1a, 0x48, 0xeb,
	0xcf, 0x81, 0xcb, 0x85, 0x55, 0x56, 0x2d, 0xd3, 0x80, 0xb4, 0x61, 0x67, 0x82, 0xe1, 0xdc, 0xe5,
	0xdc, 0x0d, 0x7c, 0x6e, 0x55, 0x54, 0x44, 0xda, 0x24, 0x3d, 0x46, 0xe8, 0xcb, 0x09, 0xb2, 0xa7,
	0x1e, 0x5a, 0x55, 0x15, 0x9d, 0x36, 0xd1, 0x6f, 0xe1, 0x70, 0x95, 0xf2, 0x4a, 0xbd, 0x63, 0xa8,
	0xea, 0x41, 0x8a, 0x72, 0x8e, 0x10, 0xed, 0x40, 0x63, 0x88, 0x42, 0x0e, 0x5f, 0x5c, 0xde, 0x6a,
	0x32, 0x8d, 0xf4, 0x64, 0xd2, 0x1f, 0x94, 0x98, 0xda, 0x33, 0x22, 0xfd, 0x0a, 0xca, 0x12, 0x2b,
	0xc7, 0x3c, 0x2d, 0x95, 0xb3, 0x72, 0xa1, 0x7f, 0x17, 0xa1, 0x2c, 0xaf, 0x24, 0x0d, 0x28, 0x26,
	0xd4, 0xc5, 0x57, 0x34, 0x93, 0x83, 0x6b, 0xfb, 0xf6, 0x33, 0xea, 0xd7, 0x51, 0x67, 0x31, 0xdc,
	0xac, 0xbf, 0x9c, 0xa9, 0x7f, 0xa5, 0x6c, 0x25, 0xad, 0x6c, 0xd2, 0x85, 0x6a, 0xba, 0x0b, 0x2d,
	0xa8, 0x4f, 0x02, 0xee, 0xaa, 0x97, 0x5c, 0x53, 0x1f, 0x12, 0xbc, 0xd9, 0x8b, 0x7a, 0xb6, 0x17,
	0xa9, 0x81, 0x34, 0xdf, 0x39, 0x90, 0xff, 0x1b, 0x50, 0xd5, 0xe7, 0x37, 0xa6, 0xa8, 0x05, 0xf5,
	0xab, 0xc0, 0xf5, 0xd1, 0xe9, 0x89, 0x48, 0x95, 0x04, 0x2b, 0xb5, 0xdc, 0xd9, 0x4b, 0xb4, 0x34,
	0xd4, 0x59, 0xda, 0xfa, 0x68, 0x3f, 0x45, 0x62, 0xa8, 0xb3, 0xb4, 0x8d, 0x96, 0x02, 0x23, 0x11,
	0xd4, 0x39, 0xe9, 0x56, 0x75, 0x6b, 0xb7, 0x56, 0xaf, 0xa4, 0xf6, 0x8e, 0x57, 0xf2, 0xc1, 0xd0,
	0xc4, 0x99, 0xd6, 0x36, 0xa1, 0x32, 0x98, 0xdb, 0xae, 0x17, 0xef, 0x0c, 0x05, 0x64, 0x79, 0xd2,
	0xdb, 0x97, 0x4d, 0xd7, 0x65, 0x24, 0x58, 0xce, 0x5e, 0xef, 0x0f, 0x5b, 0xd8, 0xa1, 0x2a, 0xc6,
	0x64, 0x11, 0x92, 0x7b, 0xa6, 0xef, 0xf2, 0x59, 0xe8, 0xce, 0x5d, 0xdf, 0x16, 0x41, 0xa8, 0xea,
	0x32, 0xd9, 0xba, 0x51, 0xde, 0x77, 0x1b, 0xbc, 0xa0, 0xaf, 0x2a, 0x34, 0x99, 0x06, 0xf2, 0xbe,
	0x7b, 0x0c, 0xdd, 0x27, 0x17, 0x1d, 0xd5, 0xe4, 0x3a, 0x4b, 0x30, 0xf9, 0x14, 0x60, 0xf4, 0x53,
	0x6f, 0xa0, 0x26, 0xc7, 0x51, 0x3d, 0xae, 0xb3, 0x94, 0x85, 0x1c, 0x40, 0xe9, 0x3c, 0x10, 0x96,
	0xa9, 0x3e, 0xc8, 0xe3, 0xd7, 0xe7, 0x70, 0x94, 0xbb, 0xdb, 0xc9, 0x09, 0x1c, 0xf6, 0xfa, 0xfd,
	0xc7, 0x31, 0x7b, 0xbc, 0x9b, 0xf4, 0x7b, 0xb7, 0x83, 0x47, 0x36, 0xfe, 0x65, 0x70, 0x73, 0x50,
	0x20, 0x07, 0xb0, 0xcb, 0x06, 0xa3, 0xf1, 0x7d, 0x6c, 0x31, 0xce, 0xfe, 0x2b, 0x41, 0xa3, 0xaf,
	0x05, 0x1d, 0x6a, 0x3d, 0xc9, 0x03, 0xec, 0xa6, 0x97, 0x3b, 0x39, 0xcd, 0x76, 0x27, 0xfb, 0x23,
	0xd5, 0xfa, 0x62, 0x8b, 0x97, 0x7e, 0xa6, 0xb4, 0x40, 0x1e, 0x60, 0x6f, 0x6d, 0xdf, 0x93, 0x6c,
	0x64, 0xde, 0xef, 0x41, 0xeb, 0xf3, 0x3c, 0xb7, 0x8d, 0xc5, 0x4c, 0x0b, 0xe4, 0x1e, 0x76, 0x74,
	0xb8, 0x1a, 0x08, 0x92, 0x13, 0x95, 0x59, 0xff, 0xad, 0x76, 0x1e, 0x75, 0x7a, 0x55, 0xd3, 0x02,
	0xf9, 0x15, 0x60, 0xb5, 0xcb, 0x08, 0xcd, 0x44, 0x64, 0x76, 0x73, 0xeb, 0xf4, 0x0d, 0x9f, 0x74,
	0xc6, 0xd7, 0x50, 0x8b, 0x96, 0x19, 0xf9, 0x2c, 0x2f, 0x91, 0xd4, 0x42, 0xcc, 0xcf, 0x34, 0xbd,
	0x07, 0x69, 0x61, 0x5a, 0x55, 0x7f, 0x2f, 0xbe, 0xff, 0x18, 0x00, 0x00, 0xff, 0xff, 0x1c, 0xf5,
	0x53, 0xe5, 0x6f, 0x08, 0x00, 0x00,
}
